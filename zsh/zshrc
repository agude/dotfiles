# set PATH so it includes user's private bin if it exists
if [[ -d ${HOME}/bin ]] ; then
    PATH=${HOME}/bin:${PATH}
fi

# Set up the platform
PLATFORM_FILE=${HOME}/.zshrc.d/000.set_platform.zsh
if [[ -f ${PLATFORM_FILE} ]]; then
    source "${PLATFORM_FILE}"
fi

# Load local aliases
[[ -f "$HOME/.localaliases" ]] && source "$HOME/.localaliases"

# Set up the XDG Base Directory Specification
XDG_FILE=${HOME}/.zshrc.d/001.xdg_base_directory.zsh
if [[ -f ${XDG_FILE} ]]; then
    source "${XDG_FILE}"
fi

if type brew &>/dev/null; then
    export OPENBLAS=$(brew --prefix openblas)
    export HDF5_DIR=$(brew --prefix hdf5)
    export LLVM_CONFIG=$(brew --prefix llvm)/bin/llvm-config
fi
export CFLAGS="-falign-functions=8 ${CFLAGS}"

# Handling Poetry for Python
export PATH="$PATH:$HOME/.local/bin/"
PATH="${PATH}:${HOME}/.local/bin"

# Use up/down to search history with prefix
# https://superuser.com/a/585004/536033
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search  # Up
bindkey "^[[B" down-line-or-beginning-search  # Down

# Set shell options
unsetopt CORRECT  # Don't fix misspellings

# Automatically title the terminal
DISABLE_AUTO_TITLE="true"

# Check if a path exists
function append_to_path {
  if [ -d "$1" ]; then
    path+=$1
  fi
}

function prepend_to_path {
  if [ -d "$1" ]; then
    path=($1 $path)
  fi
}

function append_to_path {
  if [ -d "$1" ]; then
    path=($1 $path)
  fi
}

# Pyenv
#append_to_path $HOME/.pyenv/bin
eval "$(pyenv init -)"
eval "$(pyenv init --path)"
eval "$(pyenv virtualenv-init -)"

# Load configuration subfiles
function load_config_files_from_directory {
  local subfile_dir=${HOME}/.zshrc.d/
  if [[ -d ${subfile_dir} ]]; then
    for config in "${subfile_dir}/"*.zsh; do
      source "${config}"
    done
  fi
}

load_config_files_from_directory
