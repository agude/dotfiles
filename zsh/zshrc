# Load local aliases
[[ -f "$HOME/.localaliases" ]] && source "$HOME/.localaliases"

# Handling Python envs
#eval "$(pyenv init --path)"
#eval "$(pyenv init -)"

export OPENBLAS=$(brew --prefix openblas)
export CFLAGS="-falign-functions=8 ${CFLAGS}"
export HDF5_DIR=$(brew --prefix hdf5)
export LLVM_CONFIG=$(brew --prefix llvm@11)/bin/llvm-config

# Handling Poetry for Python
export PATH="$PATH:$HOME/.local/bin/"
PATH="${PATH}:${HOME}/.local/bin"

# Set neovim as editor, but only if it exists, fall back to vim if not
hash vim &>/dev/null &&\
    export EDITOR=vim &&\
    export VISUAL=vim

hash nvim &>/dev/null &&\
    export EDITOR=nvim &&\
    export VISUAL=nvim &&\
    alias vi="nvim" &&\
    alias vim="nvim"

# Use up/down to search history with prefix
# https://superuser.com/a/585004/536033
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search  # Up
bindkey "^[[B" down-line-or-beginning-search  # Down

# History
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
setopt APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_REDUCE_BLANKS

# Set shell options
unsetopt CORRECT  # Don't fix misspellings

# Automatically title the terminal
DISABLE_AUTO_TITLE="true"

# Check if a path exists
function append_to_path {
  if [ -d "$1" ]; then
    path+=$1
  fi
}

function prepend_to_path {
  if [ -d "$1" ]; then
    path=($1 $path)
  fi
}

function append_to_path {
  if [ -d "$1" ]; then
    path=($1 $path)
  fi
}

# Pyenv
#append_to_path $HOME/.pyenv/bin
#eval "$(pyenv init -)"
#eval "$(pyenv init --path)"
#eval "$(pyenv virtualenv-init -)"

# Autoload zsh add-zsh-hook and vcs_info functions
# From: https://salferrarello.com/zsh-git-status-prompt/
autoload -Uz vcs_info
setopt prompt_subst

# Enable checking for (un)staged changes, enabling use of %u and %c
zstyle ':vcs_info:*' check-for-changes true
# Set custom strings for an unstaged vcs repo changes (*) and staged changes (+)
zstyle ':vcs_info:*' unstagedstr ' *'
zstyle ':vcs_info:*' stagedstr ' +'
# Set the format of the Git information for vcs_info
zstyle ':vcs_info:git:*' formats       '(%b%u%c)'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'

# Update the prompt
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
function updatePrompt {
    # Override the prompt
    BASE_PROMPT='%F{green}%n%F{reset}:%F{blue}%~%F{reset}'

    # Put the pyenv in front
    if [[ "$(pyenv version-name)" != "system" ]]; then
        # the next line should be double quote; single quote would not work for me
        BASE_PROMPT="($(pyenv version-name)) "$BASE_PROMPT
    fi

    # And put the gitbranch at the end
    vcs_info  # Run the vcs_info function to update the information in vcs_info_msg_0_
    if [[ -v vcs_info_msg_0_ ]]; then
        BASE_PROMPT=${BASE_PROMPT}" %F{red}${vcs_info_msg_0_}%F{reset}"
    fi

    export PROMPT=$BASE_PROMPT"$ "
}
export PROMPT_COMMAND='updatePrompt'
precmd() { eval '$PROMPT_COMMAND' } # this line is necessary for zsh


# Load configuration subfiles
subfile_dir=${HOME}/.zshrc.d/
if [[ -d ${subfile_dir} ]]; then
    for config in "${subfile_dir}/"*.zsh; do
        source "${config}"
    done
fi
